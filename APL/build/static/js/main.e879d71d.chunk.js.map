{"version":3,"sources":["UserContext.js","views/Image/FileDownload.js","views/Image/FileUpload.js","views/Binary/BinaryUpload.js","views/Binary/BinaryDownload.js","views/Binary/BinaryText.js","views/Picture/PlayerPic.js","views/Picture/TeamPic.js","App.js","index.js","views/functions.js"],"names":["UserContext","createContext","fileTypeList","fileTypeDesc","Binary","TeamLogo","PlayerImage","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","downloadText","color","red","fontWeight","typography","fontWeightBold","form","width","submit","error","fontSize","success","blue","textData","FileDownload","classes","useState","registerStatus","setRegisterStatus","selectedFile","setState","fileType","setFileType","binFiles","setBinFiles","teamFiles","setTeamFiles","playerFiles","setPlayerFiles","currFiles","setCurrFIles","currSelect","setCurrSelect","percentage","setPercentage","showProgress","setShowProgress","downloadInProgress","setDownloadInProgress","ShowResisterStatus","myMsg","Typography","className","onFileDownload","console","log","axios","method","url","process","responseType","onDownloadProgress","progressEvent","newPercent","Math","round","loaded","total","then","response","download","data","catch","e","DisplayProgress","align","LinearProgress","variant","value","BinaryInfo","DownLoad","Select","labelId","required","fullWidth","label","name","id","onChange","event","target","map","x","MenuItem","Button","size","disabled","button","onClick","useEffect","a","get","resp","team","player","bin","fdl","Container","component","maxWidth","CssBaseline","fType","myFiles","length","handleFileTypeSelect","extAllowed","FileUpload","state","onFileChange","tmp","files","onFileUpload","formData","FormData","append","myUrl","post","FileData","Box","type","lastModifiedDate","toDateString","Upload","accept","fup","BinaryUpload","myProduct","document","getElementById","toUpperCase","myType","myVersion","myURL","headers","TextField","masterData","setMasterData","products","setProducts","versions","setVersions","currProduct","setCurrProduct","currVersion","setCurrVersion","currRecord","setCurrRecord","pname","ptype","pver","version","newFile","myProducts","loadshUniqBy","filter","newProduct","handleProductSelect","newVersion","find","handleVersionSelect","ProductText","currType","setCurrType","currText","setCurrText","handleUpdateText","myText","textToInternal","pro","ver","typ","ShowTextUpdate","multiline","autoFocus","defaultValue","internalToText","text","SU_PlayerPicture","srcBlob","srcDataUri","setSrc","picFound","setPicFound","params","useParams","isUnmounted","playerPid","blob","Blob","URL","createObjectURL","getPicture","src","alt","SU_TeamPicture","srcDataUrl","teamName","hist","createBrowserHistory","AppRouter","user","setUser","useMemo","upDown","setupDown","ShowButtons","DisplayOptions","ShowHome","window","onbeforeunload","Router","refresh","localStorage","setItem","ipos","getItem","parseInt","REACT_APP_BASEPOS","initCdParams","location","pathname","split","history","Provider","path","BinaryDownload","PlayerPicture","TeamPicture","exact","ReactDOM","render","App","require","CR","String","fromCharCode","LF","SP","IntCR","IntLF","IntSP","txt","txt1","join"],"mappings":"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","file":"static/js/main.e879d71d.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);","import React, { useState , useEffect, useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LinearProgressWithLabel from '@material-ui/core/LinearProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgressWithLabel from '@material-ui/core/LinearProgress';\n\n// import { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {red, blue} from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\n// import {ValidComp, BlankArea, CricDreamLogo} from \"CustomComponents/CustomComponents.js\"\n// import {encrypt} from \"views/functions.js\"\n// import { SettingsCellOutlined } from '@material-ui/icons';\nimport axios from \"axios\";\nimport download from 'js-file-download';\n\nconst debug = true;\nconst fileTypeList = [\"TeamLogo\", \"PlayerImage\"];\nconst fileTypeDesc = {\n                      Binary: \"File type binary (exe/apk)\",\n                      TeamLogo: \"Team logo (jpg)\",\n                      PlayerImage: \"Player Image (jpg)\"\n                    };\nconst extAllowed = {\n                    Binary: \".exe,.apk\",\n                    TeamLogo: \".jpg\",\n                    PlayerImage: \".jpg\"\n                  }\n\n                 \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  downloadText: {\n    color: red[700],\n    fontWeight: theme.typography.fontWeightBold,     //theme.typography.fontWeightBold,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error:  {\n      fontSize: '12px',\n      color: red[700],\n      alignItems: 'center',\n      marginTop: '0px',\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  success:  {\n    fontSize: '12px',\n    color: blue[700],\n    alignItems: 'center',\n    marginTop: '0px',\n    fontWeight: theme.typography.fontWeightBold,\n},\ntextData: {\n    fontSize: '14px',\n    margin: theme.spacing(0),\n  },\n}));\n\n\nexport default function FileDownload() {\n  const classes = useStyles();\n  // const history = useHistory();\n  const [userRequest, setUserRequest] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(0);\n  const [fileList, setFileList] = useState([]);\n  const [state, setState] = useState({selectedFile: null });\n\n  const [fileType, setFileType] = useState(\"\");\n  const [validExt, setValidExt] = useState([])\n\n  const [binFiles, setBinFiles] = useState([]);\n  const [teamFiles, setTeamFiles] = useState([]);\n  const [playerFiles, setPlayerFiles] = useState([]);\n  const [currFiles, setCurrFIles] = useState([]);\n  const [currSelect, setCurrSelect] = useState(\"\");\n  const [percentage, setPercentage] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n  const [downloadInProgress, setDownloadInProgress] = useState(false);\n\n  useEffect(() => {\n    const fdl = async () => {\n      try {\n        // console.log(\"in use\");\n        let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/getimagenames`);\n        // console.log(resp.data);\n        setTeamFiles(resp.data.team);\n        setPlayerFiles(resp.data.player);\n        setBinFiles(resp.data.bin);\n        // console.log(resp.data.bin);\n        // console.log(resp.data.team);\n        // console.log(resp.data.player);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fdl();\n}, []);\n\n    \n  function ShowResisterStatus() {\n    let myMsg;\n    switch (registerStatus) {\n      case 0:\n        myMsg = ``;\n        break;\n      case 200:\n        myMsg = `Successfully downloaded file ${currSelect}`;\n        break;\n      case 601:\n        myMsg = `Error downloading file ${currSelect}`;\n        break;\n      default:\n        myMsg = \"Unknown Error\";\n        break;\n  }\n  return(\n    <div>\n      <Typography className={(registerStatus === 200) ? classes.success : classes.error}>{myMsg}</Typography>\n    </div>\n  )}\n\n  function onFileChange(event) {\n    // Update the state\n    let tmp = event.target.files[0];\n    // tmp.name = tmp.name.toUpperCase();\n    setState({ selectedFile:  tmp});\n  };\n\n\nfunction OrgonFileDownload() {\n  setPercentage(0);\n  setDownloadInProgress(true);\n  if (debug) console.log(\"on file download start\");\n  setRegisterStatus(0);\n  setShowProgress(true);\n  try {\n  axios({\n\t\tmethod: 'get',\n\t\turl: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadfile/${fileType}/${currSelect}`,\n\t\tresponseType: 'arraybuffer',\n\t\tonDownloadProgress: (progressEvent) => {\n      let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n      // if ((newPercent - percentage) > 5)\n      setPercentage(newPercent);\n      if (debug) console.log(\"File download in progress \", newPercent);\n\t\t},\n    })\n    .then(\n      (response) => {\n        if (debug) console.log(\"FIle download complete\");\n        setRegisterStatus(200);\n        setShowProgress(false);\n        download(response.data, currSelect);\n        // console.log(response)\n        //   this.setState({\n        //       results: response.data.results,\n        //       error: null,\n        //       totalPages: Math.ceil(response.data.count / response.data.results.length)\n        //   })  \n      }\n    )\n    .catch(\n        (error) => {\n            // this.setState({\n            //     loading: null,\n            //     error: true\n            // })  \n            setRegisterStatus(601);\n            setShowProgress(false);\n            console.log(error);\n            console.log(\"in axios catch\");\n        }\n    ); \n  } catch (e) {\n    console.log(e);\n    if (debug) console.log(\"in try catch\");\n    setRegisterStatus(601);\n    setShowProgress(false);\n  } \n  if (debug) console.log(\"Debu complete\");\n  setDownloadInProgress(false);\n};\n\nfunction onFileDownload() {\n  setPercentage(0);\n  setDownloadInProgress(true);\n  if (debug) console.log(\"on file download start\");\n  setRegisterStatus(0);\n  setShowProgress(true);\n  try {\n  axios({\n\t\tmethod: 'get',\n\t\turl: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadimage/${fileType}/${currSelect}`,\n\t\tresponseType: 'arraybuffer',\n\t\tonDownloadProgress: (progressEvent) => {\n      let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n      // if ((newPercent - percentage) > 5)\n      setPercentage(newPercent);\n      if (debug) console.log(\"File download in progress \", newPercent);\n\t\t},\n    })\n    .then(\n      (response) => {\n        if (debug) console.log(\"FIle download complete\");\n        setRegisterStatus(200);\n        setShowProgress(false);\n        download(response.data, currSelect+\".JPG\");\n        // console.log(response)\n        //   this.setState({\n        //       results: response.data.results,\n        //       error: null,\n        //       totalPages: Math.ceil(response.data.count / response.data.results.length)\n        //   })  \n      }\n    )\n    .catch(\n        (error) => {\n            // this.setState({\n            //     loading: null,\n            //     error: true\n            // })  \n            setRegisterStatus(601);\n            setShowProgress(false);\n            console.log(error);\n            console.log(\"in axios catch\");\n        }\n    ); \n  } catch (e) {\n    console.log(e);\n    if (debug) console.log(\"in try catch\");\n    setRegisterStatus(601);\n    setShowProgress(false);\n  } \n  if (debug) console.log(\"Debu complete\");\n  setDownloadInProgress(false);\n};\n\n\n\n  function FileData() {\n    if (state.selectedFile) {         \n      return (\n        <div>\n          <Box>\n            <Typography>File Details:</Typography>\n            <Typography>Name: {state.selectedFile.name}</Typography>\n            <Typography>Type: {state.selectedFile.type}</Typography>\n            <Typography>\n              Last Modified:{\" \"}\n              {state.selectedFile.lastModifiedDate.toDateString()}\n            </Typography>\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  function DisplayProgress() {\n    // console.log(percentage);\n    if (showProgress)\n      return(\n        <div align=\"center\">\n        <Typography className={classes.downloadText}>{`Progress ${percentage}%`}</Typography>\n        {/* <CircularProgressWithLabel variant=\"determinate\" value={percentage} /> */}\n        <LinearProgressWithLabel color=\"secondary\" variant=\"determinate\" value={percentage} />\n        </div>\n      );\n    else\n      return null;\n  }\n\n  function BinaryInfo() {\n    return null;\n  }\n\n  function DownLoad() {    \n    return (\n    <div>\n      <div>\n        <Select labelId='selectfile' variant=\"outlined\" required fullWidth\n            label=\"Select File\" name=\"selectfile\"\n            id=\"selectfile\"\n            value={currSelect}\n            onChange={(event) => { setCurrSelect(event.target.value);  setRegisterStatus(0); }}\n        >\n          {currFiles.map(x =>\n          <MenuItem key={x} value={x}>{x}</MenuItem>)}\n        </Select>\n        <h3></h3>\n        <DisplayProgress />\n        <h3></h3>\n        <Button align=\"center\" key=\"filterbtn\" variant=\"contained\" \n          color=\"primary\" size=\"small\"\n          disabled={((currSelect === \"\") || (downloadInProgress === true))}\n          className={classes.button} onClick={onFileDownload}>Download\n        </Button>\n      </div>\n      {/* <FileData /> */}\n    </div>\n    );\n  }\n   \n  // const fileTypeList = [\"Binary\", \"TeamLogo\", \"PlayerImage\"];\n  function handleFileTypeSelect(fType) {\n    // console.log(\"File type \", fType);\n    setFileType(fType);\n    setState({selectedFile: null});\n    let myFiles = [];\n    switch (fType) {\n      case \"Binary\":   myFiles = binFiles; break;\n      case \"TeamLogo\": myFiles = teamFiles; break;\n      case \"PlayerImage\": myFiles  = playerFiles; break;\n    }\n    setCurrFIles(myFiles);\n    setCurrSelect(myFiles.length > 0 ? myFiles[0] : \"\");\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div align=\"center\">\n        <h3>Download Player or Team Image </h3>\n        <Select labelId='imagetype' variant=\"outlined\" required fullWidth\n          label=\"File Type\" name=\"imagetype\"\n          id=\"imagetype\"\n          value={fileType}\n          // onChange={handleFileTypeSelect}\n          onChange={(event) => {handleFileTypeSelect(event.target.value);  setRegisterStatus(0); }}\n        >\n        {fileTypeList.map(x =>\n        <MenuItem key={x} value={x}>{x}</MenuItem>)}\n      </Select>\n        <br/>\n        <h3></h3>\n        <Typography>Download type {fileTypeDesc[fileType]}</Typography>\n        <h3></h3>\n        <BinaryInfo />\n        <DownLoad />\n        <ShowResisterStatus/>\n      </div>\n    </Container> \n  );\n}\n","// This is only for IMAGE .JPG file upload\n\nimport React, { useState , useEffect, useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { red, blue } from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { func } from 'prop-types';\n\nconst fileTypeList = [\"TeamLogo\", \"PlayerImage\"];\nconst fileTypeDesc = {\n                      TeamLogo: \"Team logo (jpg)\",\n                      PlayerImage: \"Player Image (jpg)\"\n                    };\nconst extAllowed = {\n                    TeamLogo: \".jpg\",\n                    PlayerImage: \".jpg\"\n                  }\n\n                 \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error:  {\n      fontSize: '12px',\n      color: red[700],\n      alignItems: 'center',\n      marginTop: '10px',\n      fontWeight: theme.typography.fontWeightBold,\n  },\n  success:  {\n    fontSize: '12px',\n    color: blue[700],\n    alignItems: 'center',\n    marginTop: '10px',\n    fontWeight: theme.typography.fontWeightBold,\n},\ntextData: {\n    fontSize: '14px',\n    margin: theme.spacing(0),\n  },\n}));\n\n\nexport default function FileUpload() {\n  const classes = useStyles();\n  // const history = useHistory();\n  const [registerStatus, setRegisterStatus] = useState(0);\n  const [state, setState] = useState({selectedFile: null });\n  const [fileType, setFileType] = useState(fileTypeList[0]);\n  const [productName, setProductName] = useState(\"\");\n  const [productVersion, setProductVersion] = useState(\"\");\n  // const [validExt, setValidExt] = useState([])\n\n  // console.log(\"File transfer\");\n  useEffect(() => {\n    const fup = async () => {\n    }\n    fup();\n}, []);\n\n    \n  function ShowResisterStatus() {\n    let myMsg;\n    switch (registerStatus) {\n      case 0:\n        myMsg = ``;\n        break;\n      case 200:\n        myMsg = `Successfully uploaded fIle ${state.selectedFile.name}`;\n        break;\n      case 601:\n        myMsg = `Error loading file`;\n        break;\n      default:\n        myMsg = \"Unknown Error\";\n        break;\n  }\n  return(\n    <div>\n      <Typography className={(registerStatus === 200) ? classes.success : classes.error}>{myMsg}</Typography>\n    </div>\n  )}\n\n  function onFileChange(event) {\n    // Update the state\n    let tmp = event.target.files[0];\n    setState({ selectedFile:  tmp});\n    setRegisterStatus(0);\n  };\n\n  async function onFileUpload() {\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\n      \"file\",\n      state.selectedFile,\n      state.selectedFile.name\n    );\n  \n    console.log(state.selectedFile.name);\n    try {\n      let myUrl = `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/uploadimage/${fileType}/${state.selectedFile.name}`\n      await axios.post(myUrl, formData);\n      setRegisterStatus(200);\n    } catch (e) {\n      setRegisterStatus(601);\n      console.log(e);\n    }\n  };\n\n  function FileData() {\n    if (state.selectedFile) {         \n      return (\n        <div>\n          <Box>\n            <Typography>File Details:</Typography>\n            <Typography>Name: {state.selectedFile.name}</Typography>\n            <Typography>Type: {state.selectedFile.type}</Typography>\n            <Typography>\n              Last Modified:{\" \"}\n              {state.selectedFile.lastModifiedDate.toDateString()}\n            </Typography>\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  function Upload() {    \n    return (\n    <div>\n      <FileData />\n      <input type=\"file\" onChange={onFileChange} accept={extAllowed[fileType]} />\n      <Button align=\"center\" key=\"filterbtn\" variant=\"contained\" \n        color=\"primary\" size=\"small\"\n        disabled={state.selectedFile === null}\n        className={classes.button} onClick={onFileUpload}>Upload\n      </Button>\n    </div>\n    );\n  }\n   \n  function BinaryInfo() {\n    console.log(fileType);\n    if (fileType === \"Binary\")\n    return (\n      <div>\n        <TextField id=\"productname\" variant=\"outlined\" required fullWidth\n          label=\"Product Name\" name=\"imagetype\"\n          // d={productName}\n          // onChange={(event) => {setProductName(event.target.value);  setState({ selectedFile:  null}); setRegisterStatus(0)}}\n        />\n        <br/>\n        <TextField id=\"productversion\" variant=\"outlined\" required fullWidth\n          label=\"Product Version\" name=\"imagetype\"\n          // value={productVersion}\n          // onChange={(event) => {setProductVersion(event.target.value);  setState({ selectedFile:  null}); setRegisterStatus(0)}}\n        />\n      </div>\n    )\n    else\n      return null;\n  } \n  \n  \n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div>\n        <h3>Upload Player or Team Image</h3>\n        <Select labelId='imagetype' variant=\"outlined\" required fullWidth\n        label=\"File Type\" name=\"imagetype\"\n        id=\"imagetype\"\n        value={fileType}\n        onChange={(event) => {setFileType(event.target.value);  setState({ selectedFile:  null}); setRegisterStatus(0)}}\n        >\n        {fileTypeList.map(x =>\n        <MenuItem key={x} value={x}>{x}</MenuItem>)}\n      </Select>\n        {/* <br/>\n        <Typography>Upload type {fileTypeDesc[fileType]}</Typography> */}\n        <br/>\n        {/* <BinaryInfo /> */}\n        <br/>\n        <Upload />\n        <ShowResisterStatus/>\n      </div>\n    </Container> \n  );\n}\n","import React, { useState , useEffect, useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { red, blue } from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { func } from 'prop-types';\n\nconst fileTypeList = [\"Binary\", \"TeamLogo\", \"PlayerImage\"];\nconst fileTypeDesc = {\n                      Binary: \"File type binary (exe/apk)\",\n                      TeamLogo: \"Team logo (jpg)\",\n                      PlayerImage: \"Player Image (jpg)\"\n                    };\nconst extAllowed = {\n                    Binary: \".exe,.apk\",\n                    TeamLogo: \".jpg\",\n                    PlayerImage: \".jpg\"\n                  }\nconst BinaryExtAllowed = \".exe,.apk\";\n\n                 \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error:  {\n      fontSize: '12px',\n      color: red[700],\n      alignItems: 'center',\n      marginTop: '10px',\n      fontWeight: theme.typography.fontWeightBold,\n  },\n  success:  {\n    fontSize: '12px',\n    color: blue[700],\n    alignItems: 'center',\n    marginTop: '10px',\n    fontWeight: theme.typography.fontWeightBold,\n},\ntextData: {\n    fontSize: '14px',\n    margin: theme.spacing(0),\n  },\n}));\n\n\nexport default function BinaryUpload() {\n  const classes = useStyles();\n  // const history = useHistory();\n  const [registerStatus, setRegisterStatus] = useState(0);\n  const [state, setState] = useState({selectedFile: null });\n  const [fileType, setFileType] = useState(fileTypeList[0]);\n  const [productName, setProductName] = useState(\"\");\n  const [productVersion, setProductVersion] = useState(\"\");\n  // const [validExt, setValidExt] = useState([])\n\n  // console.log(\"File transfer\");\n  useEffect(() => {\n    const fup = async () => {\n    }\n    fup();\n}, []);\n\n    \n  function ShowResisterStatus() {\n    let myMsg;\n    switch (registerStatus) {\n      case 0:\n        myMsg = ``;\n        break;\n      case 200:\n        myMsg = `Successfully uploaded fIle ${state.selectedFile.name}`;\n        break;\n      case 601:\n        myMsg = `Error laoding file`;\n        break;\n      default:\n        myMsg = \"Unknown Error\";\n        break;\n  }\n  return(\n    <div>\n      <Typography className={(registerStatus === 200) ? classes.success : classes.error}>{myMsg}</Typography>\n    </div>\n  )}\n\n  function onFileChange(event) {\n    // Update the state\n    let tmp = event.target.files[0];\n    setState({ selectedFile:  tmp});\n    setRegisterStatus(0);\n  };\n\n  async function onFileUpload() {\n\n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append('action', 'ADD');\n    formData.append('param', 0);\n    formData.append('secondParam', 0);\n    // formData.append('file', new Blob(['test payload'], {\n    //   type: 'text/csv',\n    // }));\n    formData.append(\n      \"file\",\n      state.selectedFile,\n      state.selectedFile.name\n    );\n  \n    console.log(state.selectedFile);\n\n    try {\n      let myProduct = document.getElementById(\"productname\").value.toUpperCase();\n      console.log(myProduct);\n      let myType = document.getElementById(\"producttype\").value.toUpperCase();\n      console.log(myProduct);\n      let myVersion = document.getElementById(\"productversion\").value;\n      console.log(myVersion);        \n      let myURL = `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/uploadbinary/${myProduct}/${myType}/${myVersion}/${state.selectedFile.name}`\n      console.log(myURL);\n      await axios({  //myURL, formData, \n        url: myURL,\n        method: 'POST',\n        data: formData,\n        headers: {\n          // Accept: 'application/json',\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setRegisterStatus(200);\n    } catch (e) {\n      setRegisterStatus(601);\n      console.log(e);\n    }\n  };\n\n  function FileData() {\n    if (state.selectedFile) {         \n      return (\n        <div>\n          <Box>\n            <Typography>File Details:</Typography>\n            <Typography>Name: {state.selectedFile.name}</Typography>\n            <Typography>Type: {state.selectedFile.type}</Typography>\n            <Typography>\n              Last Modified:{\" \"}\n              {state.selectedFile.lastModifiedDate.toDateString()}\n            </Typography>\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  function Upload() {    \n    return (\n    <div>\n      <input type=\"file\" onChange={onFileChange} accept={BinaryExtAllowed} />\n      <FileData />\n    </div>\n    );\n  }\n   \n  function BinaryInfo() {\n    return (\n      <div>\n        <TextField id=\"productname\" variant=\"outlined\" required fullWidth\n          label=\"Product Name\" name=\"imagetype\"\n        />\n        <br/>\n        <TextField id=\"producttype\" variant=\"outlined\" required fullWidth\n          label=\"Product Type\" name=\"imagetype\"\n        />\n        <br/>\n        <TextField id=\"productversion\" variant=\"outlined\" required fullWidth\n          label=\"Product Version\" name=\"imagetype\"\n        />\n      </div>\n    )\n  } \n  \n  \n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div>\n        <h3>Upload Binary </h3>\n        <br/>\n        <Upload />\n        <br/>\n        <BinaryInfo />\n        <br />\n        <Button align=\"center\" key=\"filterbtn\" variant=\"contained\" \n          color=\"primary\" size=\"small\"\n          disabled={state.selectedFile === null}\n          className={classes.button} onClick={onFileUpload}>Upload\n        </Button>\n        <ShowResisterStatus/>\n      </div>\n    </Container> \n  );\n}\n","import React, { useState , useEffect, useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LinearProgressWithLabel from '@material-ui/core/LinearProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgressWithLabel from '@material-ui/core/LinearProgress';\n\nimport loadshUniqBy from 'lodash/uniqBy';\n\n// import { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {red, blue} from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\n// import {ValidComp, BlankArea, CricDreamLogo} from \"CustomComponents/CustomComponents.js\"\n// import {encrypt} from \"views/functions.js\"\n// import { SettingsCellOutlined } from '@material-ui/icons';\nimport axios from \"axios\";\nimport download from 'js-file-download';\n\nconst debug = false;\nconst fileTypeList = [\"TeamLogo\", \"PlayerImage\"];\nconst fileTypeDesc = {\n                      Binary: \"File type binary (exe/apk)\",\n                      TeamLogo: \"Team logo (jpg)\",\n                      PlayerImage: \"Player Image (jpg)\"\n                    };\nconst extAllowed = {\n                    Binary: \".exe,.apk\",\n                    TeamLogo: \".jpg\",\n                    PlayerImage: \".jpg\"\n                  }\n\n                 \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  downloadText: {\n    color: red[700],\n    fontWeight: theme.typography.fontWeightBold,     //theme.typography.fontWeightBold,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error:  {\n      fontSize: '12px',\n      color: red[700],\n      alignItems: 'center',\n      marginTop: '0px',\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  success:  {\n    fontSize: '12px',\n    color: blue[700],\n    alignItems: 'center',\n    marginTop: '0px',\n    fontWeight: theme.typography.fontWeightBold,\n},\ntextData: {\n    fontSize: '14px',\n    margin: theme.spacing(0),\n  },\n}));\n\n\nexport default function FileDownload() {\n  const classes = useStyles();\n  // const history = useHistory();\n  const [userRequest, setUserRequest] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(0);\n  const [fileList, setFileList] = useState([]);\n  const [state, setState] = useState({selectedFile: null });\n\n  const [fileType, setFileType] = useState(\"\");\n  const [validExt, setValidExt] = useState([])\n\n  const [masterData, setMasterData] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [versions, setVersions] = useState([]);\n  const [currProduct, setCurrProduct] = useState(\"\");\n  const [currVersion, setCurrVersion] = useState(\"\");\n  const [currRecord, setCurrRecord] = useState(null);\n  //\n  const [percentage, setPercentage] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n  const [downloadInProgress, setDownloadInProgress] = useState(false);\n\n  useEffect(() => {\n    const fdl = async () => {\n      try {\n        // console.log(\"in use\");\n        let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/getbinarynames`);\n        setMasterData(resp.data);\n\n        // get uniq product names\n        let myProducts = resp.data.map(x => x.name);\n        myProducts = loadshUniqBy(myProducts);\n        console.log(myProducts);\n\n        setProducts(myProducts);\n        if (myProducts.length > 0) {\n\n          setCurrProduct(myProducts[0]);\n          let tmp = resp.data.filter(x => x.name === myProducts[0]);\n          setVersions(tmp);\n          setCurrVersion(tmp[0].version);\n          setCurrRecord(tmp[0]);\n          //console.log(myProducts);\n          //console.log(tmp.version);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fdl();\n}, []);\n\n    \n  function ShowResisterStatus() {\n    let myMsg;\n    switch (registerStatus) {\n      case 0:\n        myMsg = ``;\n        break;\n      case 200:\n        myMsg = `Successfully downloaded file`;\n        break;\n      case 601:\n        myMsg = `Error downloading file`;\n        break;\n      default:\n        myMsg = \"Unknown Error\";\n        break;\n  }\n  return(\n    <div>\n      <Typography className={(registerStatus === 200) ? classes.success : classes.error}>{myMsg}</Typography>\n    </div>\n  )}\n\n  function onFileChange(event) {\n    // Update the state\n    let tmp = event.target.files[0];\n    // tmp.name = tmp.name.toUpperCase();\n    setState({ selectedFile:  tmp});\n  };\n\n\nfunction OrgonFileDownload() {\n  setPercentage(0);\n  setDownloadInProgress(true);\n  if (debug) console.log(\"on file download start\");\n  setRegisterStatus(0);\n  setShowProgress(true);\n  try {\n  axios({\n\t\tmethod: 'get',\n\t\turl: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadbinary/${fileType}/${currSelect}`,\n\t\tresponseType: 'arraybuffer',\n\t\tonDownloadProgress: (progressEvent) => {\n      let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n      // if ((newPercent - percentage) > 5)\n      setPercentage(newPercent);\n      if (debug) console.log(\"File download in progress \", newPercent);\n\t\t},\n    })\n    .then(\n      (response) => {\n        if (debug) console.log(\"FIle download complete\");\n        setRegisterStatus(200);\n        setShowProgress(false);\n        download(response.data, currSelect);\n        // console.log(response)\n        //   this.setState({\n        //       results: response.data.results,\n        //       error: null,\n        //       totalPages: Math.ceil(response.data.count / response.data.results.length)\n        //   })  \n      }\n    )\n    .catch(\n        (error) => {\n            // this.setState({\n            //     loading: null,\n            //     error: true\n            // })  \n            setRegisterStatus(601);\n            setShowProgress(false);\n            console.log(error);\n            console.log(\"in axios catch\");\n        }\n    ); \n  } catch (e) {\n    console.log(e);\n    if (debug) console.log(\"in try catch\");\n    setRegisterStatus(601);\n    setShowProgress(false);\n  } \n  if (debug) console.log(\"Debu complete\");\n  setDownloadInProgress(false);\n};\n\nfunction onFileDownload() {\n  let pname = currRecord.name;\n  let ptype = currRecord.type;\n  let pver = currRecord.version;\n  let newFile = pname + \".\" + ptype;\n  setPercentage(0);\n  setDownloadInProgress(true);\n  if (debug) console.log(\"on file download start\");\n  setRegisterStatus(0);\n  setShowProgress(true);\n  try {\n  axios({\n\t\tmethod: 'get',\n\t\turl: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadbinary/${pname}/${ptype}/${pver}`,\n\t\tresponseType: 'arraybuffer',\n\t\tonDownloadProgress: (progressEvent) => {\n      let newPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n      // if ((newPercent - percentage) > 5)\n      setPercentage(newPercent);\n      if (debug) console.log(\"File download in progress \", newPercent);\n\t\t},\n    })\n    .then(\n      (response) => {\n        if (debug) console.log(\"FIle download complete\");\n        setRegisterStatus(200);\n        setShowProgress(false);\n        download(response.data, newFile);\n        // console.log(response)\n        //   this.setState({\n        //       results: response.data.results,\n        //       error: null,\n        //       totalPages: Math.ceil(response.data.count / response.data.results.length)\n        //   })  \n      }\n    )\n    .catch(\n        (error) => {\n            // this.setState({\n            //     loading: null,\n            //     error: true\n            // })  \n            setRegisterStatus(601);\n            setShowProgress(false);\n            console.log(error);\n            console.log(\"in axios catch\");\n        }\n    ); \n  } catch (e) {\n    console.log(e);\n    if (debug) console.log(\"in try catch\");\n    setRegisterStatus(601);\n    setShowProgress(false);\n  } \n  if (debug) console.log(\"Debu complete\");\n  setDownloadInProgress(false);\n};\n\n\n\n  function FileData() {\n    if (state.selectedFile) {         \n      return (\n        <div>\n          <Box>\n            <Typography>File Details:</Typography>\n            <Typography>Name: {state.selectedFile.name}</Typography>\n            <Typography>Type: {state.selectedFile.type}</Typography>\n            <Typography>\n              Last Modified:{\" \"}\n              {state.selectedFile.lastModifiedDate.toDateString()}\n            </Typography>\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  function DisplayProgress() {\n    // console.log(percentage);\n    if (showProgress)\n      return(\n        <div align=\"center\">\n        <Typography className={classes.downloadText}>{`Progress ${percentage}%`}</Typography>\n        {/* <CircularProgressWithLabel variant=\"determinate\" value={percentage} /> */}\n        <LinearProgressWithLabel color=\"secondary\" variant=\"determinate\" value={percentage} />\n        </div>\n      );\n    else\n      return null;\n  }\n\n  function BinaryInfo() {\n    return null;\n  }\n\n  function DownLoad() {    \n    // console.log(currRecord);\n    return (\n    <div>\n      <div>\n        <DisplayProgress />\n        <h3></h3>\n        <Button align=\"center\" key=\"filterbtn\" variant=\"contained\" \n          color=\"primary\" size=\"small\"\n          disabled={((currRecord === null) || (downloadInProgress === true))}\n          className={classes.button} onClick={onFileDownload}>Download\n        </Button>\n      </div>\n      {/* <FileData /> */}\n    </div>\n    );\n  }\n   \n  // const fileTypeList = [\"Binary\", \"TeamLogo\", \"PlayerImage\"];\n  function handleFileTypeSelect(fType) {\n    // console.log(\"File type \", fType);\n    setFileType(fType);\n    setState({selectedFile: null});\n    let myFiles = [];\n    switch (fType) {\n      case \"Binary\":   myFiles = binFiles; break;\n      case \"TeamLogo\": myFiles = teamFiles; break;\n      case \"PlayerImage\": myFiles  = playerFiles; break;\n    }\n    setCurrFIles(myFiles);\n    setCurrSelect(myFiles.length > 0 ? myFiles[0] : \"\");\n  }\n\n  function handleProductSelect(newProduct) {\n    setCurrProduct(newProduct);\n    let tmp = masterData.filter(x => x.name === newProduct);\n    setVersions(tmp);\n    setCurrVersion(tmp[0].version);\n    setCurrRecord(tmp[0]);\n    setRegisterStatus(0);\n  }\n\n  \n  function handleVersionSelect(newVersion) {\n    setCurrVersion(newVersion);\n    let tmp = masterData.find(x => x.name === currProduct && x.version === newVersion);\n    setCurrRecord(tmp);\n    setRegisterStatus(0);\n  }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div align=\"center\">\n        <h3>Download Binary exe or apk </h3>\n        <Select labelId='product' variant=\"outlined\" required fullWidth\n          label=\"Product\" name=\"product\"\n          id=\"product\"\n          value={currProduct}\n          // onChange={handleFileTypeSelect}\n          onChange={(event) => { handleProductSelect(event.target.value); }}\n        >\n          {products.map(x =>\n          <MenuItem key={x} value={x}>{x}</MenuItem>)}\n        </Select>\n        <h3></h3>\n        <Select labelId='version' variant=\"outlined\" required fullWidth\n          label=\"Version\" name=\"version\"\n          id=\"version\"\n          value={currVersion}\n          // onChange={handleFileTypeSelect}\n          onChange={(event) => { handleVersionSelect(event.target.value); }}\n        >\n          {versions.map(x =>\n          <MenuItem key={x.version} value={x.version}>{x.version}</MenuItem>)}\n        </Select>\n        <br/>\n        <h3></h3>\n        <BinaryInfo />\n        <DownLoad />\n        <ShowResisterStatus/>\n      </div>\n    </Container> \n  );\n}\n","import React, { useState , useEffect, useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LinearProgressWithLabel from '@material-ui/core/LinearProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgressWithLabel from '@material-ui/core/LinearProgress';\n\nimport loadshUniqBy from 'lodash/uniqBy';\n\n// import { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {red, blue} from '@material-ui/core/colors';\nimport { useHistory } from \"react-router-dom\";\n// import {ValidComp, BlankArea, CricDreamLogo} from \"CustomComponents/CustomComponents.js\"\nimport {\n  checkText, textToInternal, internalToText,\n} from \"views/functions.js\"\nimport axios from \"axios\";\nimport download from 'js-file-download';\n\nconst debug = false;\nconst extensionType = [\"EXE\", \"APK\"];\nconst extAllowed = {\n                    Binary: \".exe,.apk\",\n                    TeamLogo: \".jpg\",\n                    PlayerImage: \".jpg\"\n                  }\n\n                 \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  downloadText: {\n    color: red[700],\n    fontWeight: theme.typography.fontWeightBold,     //theme.typography.fontWeightBold,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error:  {\n      fontSize: '12px',\n      color: red[700],\n      alignItems: 'center',\n      marginTop: '0px',\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  success:  {\n    fontSize: '12px',\n    color: blue[700],\n    alignItems: 'center',\n    marginTop: '0px',\n    fontWeight: theme.typography.fontWeightBold,\n},\ntextData: {\n    fontSize: '14px',\n    margin: theme.spacing(0),\n  },\n}));\n\n\nexport default function ProductText() {\n  const classes = useStyles();\n  // const history = useHistory();\n  // const [userRequest, setUserRequest] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(0);\n  const [fileList, setFileList] = useState([]);\n  const [state, setState] = useState({selectedFile: null });\n\n  // const [fileType, setFileType] = useState(\"\");\n  // const [validExt, setValidExt] = useState([])\n\n  const [masterData, setMasterData] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [versions, setVersions] = useState([]);\n  const [currProduct, setCurrProduct] = useState(\"\");\n  const [currVersion, setCurrVersion] = useState(\"\");\n  const [currType, setCurrType] = useState(\"\");\n  const [currRecord, setCurrRecord] = useState(null);\n  const [currText, setCurrText] = useState(\"\");\n  //\n  // const [percentage, setPercentage] = useState(0);\n  // const [showProgress, setShowProgress] = useState(false);\n  // const [downloadInProgress, setDownloadInProgress] = useState(false);\n\n  useEffect(() => {\n    const fdl = async () => {\n      try {\n        // console.log(\"in use\");\n        let resp = await axios.get(`${process.env.REACT_APP_AXIOS_BASEPATH}/apl/getbinarynames`);\n        // console.log(resp.data);\n        setMasterData(resp.data);\n        let myProducts = resp.data.map(x => x.name);\n        myProducts = loadshUniqBy(myProducts);\n        setProducts(myProducts);\n\n        if (myProducts.length > 0) {\n          setCurrProduct(myProducts[0]);\n          let tmp = resp.data.filter(x => x.name === myProducts[0]);\n          setVersions(tmp);\n          setCurrVersion(tmp[0].version);\n          console.log(tmp[0]);\n          setCurrType(tmp[0].type);\n          setCurrText(internalToText(tmp[0].text));\n          // console.log(\"0. CUrr type\", tmp.version[0].type )\n          setCurrRecord(tmp[0]);\n          // console.log(myProducts);\n          // console.log(tmp.version);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fdl();\n}, []);\n\n    \n  function ShowResisterStatus() {\n    let myMsg;\n    switch (registerStatus) {\n      case 0:\n        myMsg = ``;\n        break;\n      case 200:\n        myMsg = `Successfully Updated Product description`;\n        break;\n      case 601:\n        myMsg = `Error updating product description`;\n        break;\n      default:\n        myMsg = \"Unknown Error\";\n        break;\n  }\n  return(\n    <div>\n      <Typography className={(registerStatus === 200) ? classes.success : classes.error}>{myMsg}</Typography>\n    </div>\n  )}\n\n\n\n\n\n  function handleProductSelect(newProduct) {\n    setCurrProduct(newProduct);\n    let tmp = masterData.filter(x => x.name === newProduct);\n    setVersions(tmp);\n    setCurrVersion(tmp[0].version);\n    setCurrRecord(tmp[0]);\n    setCurrType(tmp[0].type);\n    setCurrText(internalToText(tmp[0].text));\n    setRegisterStatus(0);\n  }\n\n  \n  function handleVersionSelect(newVersion) {\n    setCurrVersion(newVersion);\n    let tmp = masterData.find(x => x.name === currProduct && x.version === newVersion);\n    console.log(tmp);\n    setCurrType(tmp.type);\n    setCurrText(internalToText(tmp.text));\n    setCurrRecord(tmp);\n    setRegisterStatus(0);\n  }\n\n  async function handleUpdateText() {\n    let myText = document.getElementById(\"producttext\").value;\n    // console.log(\"Before\",myText);\n    setCurrText(myText);\n\n    // checkText(myText);\n    myText = textToInternal(myText);\n    // console.log(\"After\",myText);\n\n    let pro = currRecord.name;\n    let ver = currRecord.version;\n    let typ = currRecord.type;\n    try {\n      let myUrl = `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/setproducttext/${pro}/${typ}/${ver}/${myText}`;\n      // console.log(myUrl);\n      await axios.get(myUrl);\n      setRegisterStatus(200);\n\n    } catch(e) {\n      console.log(e);\n      setRegisterStatus(601);\n    }\n  }\n\n  function ShowTextUpdate() {\n    return (\n      <div>\n      <Typography>Update Description</Typography>\n      <TextField variant=\"outlined\" multiline fullWidth \n      id=\"producttext\"\n      label=\"Product Description\" \n      autoFocus\n      defaultValue={currText} \n      // onChange={(event) => setCurrText(event.target.value)}\n      />\n      <Button align=\"center\" key=\"filterbtn\" variant=\"contained\" \n        color=\"primary\" size=\"small\"\n        className={classes.button} onClick={handleUpdateText}>Update\n      </Button>\n      </div>\n    )\n  }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div align=\"center\">\n        <h3>Set detailed text of  Product</h3>\n        <Select labelId='product' variant=\"outlined\" required fullWidth\n          label=\"Product\" name=\"product\"\n          id=\"product\"\n          value={currProduct}\n          // onChange={handleFileTypeSelect}\n          onChange={(event) => { handleProductSelect(event.target.value); }}\n        >\n          {products.map(x =>\n          <MenuItem key={x} value={x}>{x}</MenuItem>)}\n        </Select>\n        <h3></h3>\n        <Select labelId='version' variant=\"outlined\" required fullWidth\n          label=\"Version\" name=\"version\"\n          id=\"version\"\n          value={currVersion}\n          // onChange={handleFileTypeSelect}\n          onChange={(event) => { handleVersionSelect(event.target.value); }}\n        >\n          {versions.map(x =>\n          <MenuItem key={x.version} value={x.version}>{x.version}</MenuItem>)}\n        </Select>\n        <h3></h3>\n        <TextField variant=\"outlined\" fullWidth label=\"Product Type\" value={currType} disabled />\n        <h3></h3>\n        <ShowTextUpdate />\n        <ShowResisterStatus/>\n      </div>\n    </Container> \n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { getImageName } from \"views/functions.js\"\n// import {red, blue } from '@material-ui/core/colors';\n\n\n\nexport default function SU_PlayerPicture() {\n  const [{srcBlob, srcDataUri }, setSrc] = useState({srcBlob: null, srcDataUri: null });\n  const [picFound, setPicFound] = useState(false);  \n   \n  const params = useParams();\n  // console.log(params);\n\n  useEffect(() => {\n    let isUnmounted = false;    \n\n    async function getPicture() {\n      try {\n        let response =  await axios({method: 'get', responseType: 'arraybuffer',\n          url: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadimage/PlayerImage/${params.playerPid}.JPG`\n        });\n\n        if(isUnmounted) {\n          setPicFound(false);\n          return;\n        }            \n\n        const blob = new Blob([response.data])\n        const srcBlob = URL.createObjectURL(blob);\n        setSrc(state => ({...state, srcBlob}));\n        setPicFound(true);\n      } catch (e) {    \n        console.log(\"in axios catch\", e);\n        setPicFound(false);\n      }\n    }\n    getPicture();\n\n    return () => {\n      isUnmounted = true;\n    }\n\n  }, [])\n  \n         \n  // console.log(\"Found\", picFound);\n  if (picFound)\n    return (\n      <div>\n      <img src={srcBlob} alt=\"image blob\"/>\n      </div>\n    );\n  else\n    return null;\n}\n\n\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n// import { makeStyles } from '@material-ui/core/styles';\n// import {red, blue } from '@material-ui/core/colors';\n\n\nexport default function SU_TeamPicture() {\n  const [{srcBlob, srcDataUrl }, setSrc] = useState({srcBlob: null, srcDataUrl: null });\n  const [picFound, setPicFound] = useState(false);  \n \n  const params = useParams();\n  // console.log(params);\n\n  useEffect(() => {\n    let isUnmounted = false;    \n  \n    async function getPicture() {\n      try {\n        let response =  await axios({method: 'get', responseType: 'arraybuffer',\n          url: `${process.env.REACT_APP_AXIOS_BASEPATH}/apl/downloadimage/TeamLogo/${params.teamName}.JPG`\n        });\n\n        if(isUnmounted) {\n          setPicFound(false);\n          return;\n        }            \n\n        const blob = new Blob([response.data])\n        const srcBlob = URL.createObjectURL(blob);\n        setSrc(state => ({...state, srcBlob}));\n        setPicFound(true);\n      } catch (e) {    \n        console.log(\"in axios catch\", e);\n        setPicFound(false);\n      }\n    }\n    \n    getPicture();\n    return () => {\n      isUnmounted = true;\n    }\n\n  }, [])\n \n \n  // console.log(\"Found\", picFound);\n  if (picFound)\n    return (\n      <div>\n      <img src={srcBlob} alt=\"image blob\"/>\n      </div>\n    );\n  else\n    return null;\n\n}\n\n\n","import React, { useState, useMemo } from \"react\";\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { UserContext } from \"./UserContext\";\nimport Button from '@material-ui/core/Button';\n//import Admin from \"layouts/Admin.js\";\nimport \"assets/css/material-dashboard-react.css?v=1.9.0\";\n\n// import { DesktopWindows } from \"@material-ui/icons\";\n\nimport FileDownload from \"views/Image/FileDownload\";\nimport FileUpload from \"views/Image/FileUpload\";\n\nimport BinaryUpload from \"views/Binary/BinaryUpload\";\nimport BinaryDownload from \"views/Binary/BinaryDownload\";\nimport ProductText from \"views/Binary/BinaryText\";\n\nimport PlayerPicture from \"views/Picture/PlayerPic\";\nimport TeamPicture from \"views/Picture/TeamPic\";\n\nconst hist = createBrowserHistory();\n\n\nfunction initCdParams() {\n  localStorage.setItem(\"joinGroupCode\", \"\");\n  let ipos = 0;\n  if ((localStorage.getItem(\"tabpos\") !== null) &&\n  (localStorage.getItem(\"tabpos\") !== \"\") ) {\n    ipos = parseInt(localStorage.getItem(\"tabpos\"));\n    if (ipos >= process.env.REACT_APP_BASEPOS) localStorage.setItem(\"tabpos\", ipos-process.env.REACT_APP_BASEPOS);\n  } else\n    localStorage.setItem(\"tabpos\", 0);\n  console.log(`ipos: ${ipos}   Tabpos ${localStorage.getItem(\"tabpos\")}`)\n}\n\n\nfunction AppRouter() {\n  const [user, setUser] = useState(null);\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  const [upDown, setupDown] = useState(\"DOWNLOADIMAGE\");\n\n  function ShowButtons() {\n    console.log(upDown);\n    return (\n      <div align=\"center\">\n        <div>\n        <Button\n          // type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={upDown === \"UPLOADBINARY\"}\n          onClick={() => {setupDown(\"UPLOADBINARY\")}}\n        >\n          Upload Binary\n        </Button>\n        <Button\n          //type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={upDown === \"DOWNLOADBINARY\"}\n          onClick={() => {setupDown(\"DOWNLOADBINARY\")}}\n        >\n          DownLoad Binary\n        </Button>\n        </div>\n        <div>\n        <Button\n          // type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={upDown === \"UPLOADIMAGE\"}\n          onClick={() => {setupDown(\"UPLOADIMAGE\")}}\n        >\n          Upload Image\n        </Button>\n        <Button\n          //type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={upDown === \"DOWNLOADIMAGE\"}\n          onClick={() => {setupDown(\"DOWNLOADIMAGE\")}}\n        >\n          DownLoad Image\n        </Button>\n        </div>\n        <div>\n        <Button\n          // type=\"submit\"\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={upDown === \"BINARYTEXT\"}\n          onClick={() => {setupDown(\"BINARYTEXT\")}}\n        >\n          Product Text\n        </Button>\n        </div>\n      </div>\n    )\n  }\n\n\n  function DispayTabs() {\n    // console.log(localStorage.getItem(\"uid\"));\n    // console.log(`Status is ${isUserLogged()}`)\n\n    if (isUserLogged())\n      return (<CricDreamTabs/>)  \n    else {\n      if (localStorage.getItem(\"currentLogin\") === \"SIGNUP\")\n        return (<SignUp/>)\n      else if (localStorage.getItem(\"currentLogin\") === \"RESET\")\n        return (<ForgotPassword/>)\n      else\n        return (<SignIn/>)\n    }\n  }\n  // localStorage.clear()\n  window.onbeforeunload = () => Router.refresh();\n  //console.log(\"in before unload\");\n  // localStorage.clear();\n  // console.log(\"clearing local storage\");\n  initCdParams();\n  //console.log(\"GTP \"+window.location.pathname.toLowerCase());\n  let mypath = window.location.pathname.split(\"/\");\n\n  function DisplayOptions() {\n    switch (upDown) {\n      case \"UPLOADBINARY\": return <BinaryUpload />\n      case \"UPLOADIMAGE\" : return <FileUpload />\n      case \"DOWNLOADBINARY\": return <BinaryDownload />\n      case \"DOWNLOADIMAGE\" : return <FileDownload />\n      case \"BINARYTEXT\" : return <ProductText />\n      default: return null;\n    }\n  }\n\n  function ShowHome() {\n    return (\n      <div>\n        <ShowButtons />\n        <DisplayOptions />\n      </div>\n    )\n  }\n\n  return (\n    <BrowserRouter history={hist}> \n      <UserContext.Provider value={value}>\n        <Route path=\"/image/upload\" component={FileUpload} />\n        <Route path=\"/image/download\" component={FileDownload} />\n        <Route path=\"/binary/upload\" component={BinaryUpload} />\n        <Route path=\"/binary/download\" component={BinaryDownload} />\n        <Route path=\"/binary/text\" component={ProductText} />\n        <Route path=\"/playerpic/:playerPid\" component={PlayerPicture} />\n        <Route path=\"/teampic/:teamName\" component={TeamPicture} />\n        <Route path=\"/home\" component={ShowHome} />\n        <Route exact path=\"/\" component={ShowHome} />\n        {/* <Redirect exact from=\"/\" to=\"/home\" /> */}\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n\n// return (\n//       <Router history={hist}> \n//       <UserContext.Provider value={value}>\n//       </UserContext.Provider>\n//       <DispayTabs />\n//       </Router>\n//   );\n\n}\n\nexport default AppRouter;\n","/*!\n\n=========================================================\n* Material Dashboard React - v1.9.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","import axios from \"axios\";\nvar crypto = require(\"crypto\");\n\n\nexport function validateSpecialCharacters(sss) {\n    var sts = false;\n    const TerroristCharacters = [];\n\n    if (!sss.includes(\"\\\"\"))\n    if (!sss.includes(\"\\'\"))\n    if (!sss.includes(\"\\`\"))\n    if (!sss.includes(\"\\\\\"))\n    if (!sss.includes(\"/\"))\n    if (!sss.includes(\"~\"))\n    if (!sss.includes(\"\\%\"))\n    if (!sss.includes(\"^\"))\n    if (!sss.includes(\"\\&\"))\n    if (!sss.includes(\"\\+\"))\n      sts = true;\n    return sts;\n}\n\nexport function validateMobile(sss) {\n  var sts = false;\n  const TerroristCharacters = [];\n\n  if (sss.length === 10)\n  if (!sss.includes(\"\\.\"))\n  if (!sss.includes(\"\\-\"))\n  if (!sss.includes(\"\\+\"))\n  if (!sss.includes(\"\\*\"))\n  if (!sss.includes(\"\\/\"))\n  if (!sss.includes(\"e\"))\n  if (!sss.includes(\"E\"))\n  if (!isNaN(sss))\n    sts = true;\n  return sts;\n}\n\nexport function validateEmail(sss) {\n    let sts = false;\n    if (validateSpecialCharacters(sss)) {\n      let xxx = sss.split(\"@\");\n      if (xxx.length === 2) {\n        if (xxx[1].includes(\".\")) \n          sts = true;\n      }\n    }\n    return sts;\n}\n\n\n\nexport function encrypt(text) {\n  let hash=\"\";\n  try {\n    const cipher = crypto.createCipheriv(process.env.REACT_APP_ALGORITHM, \n      process.env.REACT_APP_AKSHUSECRETKEY, \n      Buffer.from(process.env.REACT_APP_IV, 'hex'));\n    const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\n    hash = encrypted.toString('hex');\n  }\n  catch (err) {\n    console.log(err);\n  } \n  return hash;\n};\n\nexport function decrypt(hash) {\n  const decipher = crypto.createDecipheriv(process.env.REACT_APP_ALGORITHM, \n    process.env.REACT_APP_AKSHUSECRETKEY, \n    Buffer.from(process.env.REACT_APP_IV, 'hex'));\n  const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash, 'hex')), decipher.final()]);\n  return decrpyted.toString();\n};\n\nconst AMPM = [\n  \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\",\n  \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\", \"PM\"\n];\n  /**\n * @param {Date} d The date\n */\nconst TZ_IST={hours: 5, minutes: 30};\nexport function cricDate(d) {\n  var xxx = new Date(d.getTime());\n  xxx.setHours(xxx.getHours()+TZ_IST.hours);\n  xxx.setMinutes(xxx.getMinutes()+TZ_IST.minutes);\n  var myHour = xxx.getHours();\n  var myampm = AMPM[myHour];\n  if (myHour > 12) myHour -= 12;\n  var tmp = `${MONTHNAME[xxx.getMonth()]} ${(\"0\" + xxx.getDate()).slice(-2)} ${(\"0\" + myHour).slice(-2)}:${(\"0\" +  xxx.getMinutes()).slice(-2)}${myampm}`\n  return tmp;\n}\n\nconst notToConvert = ['XI', 'ARUN']\n/**\n * @param {string} t The date\n */\n\n\n\nexport function getImageName(teamName) {\n  let imageName = `${teamName}.JPG`;\n  imageName = imageName.replaceAll(\" \", \"\");\n  return imageName;\n}\n\n\nexport function checkText(txt) {\n  for(let i=0; i<txt.length; ++i) {\n    let asciiValue = txt.charCodeAt(i);\n    if (asciiValue === 10) \n      console.log(`----CR at index ${i}`);\n    else if (asciiValue === 13) \n      console.log(`----LF at index ${i}`);\n    else if (asciiValue === 32) \n      console.log(`----SP at index ${i}`);\n    else\n      console.log(`char ${txt[i]} at ${i}`);\n  }\n}\n\nconst CR = String.fromCharCode(13);\nconst LF = String.fromCharCode(10);\nconst SP = String.fromCharCode(32);\n\nconst IntCR = String.fromCharCode(128+13);\nconst IntLF = String.fromCharCode(128+10);\nconst IntSP = String.fromCharCode(128+32);\n\nexport function textToInternal(txt) {\n  let txt1 = txt;\n  let x = txt1.split(CR);\n  txt1 = x.join(IntCR);\n  x = txt1.split(LF);\n  txt1 = x.join(IntLF);\n  x = txt1.split(SP);\n  txt1 = x.join(IntSP);\n  return txt1;\n}\n\nexport function internalToText(txt) {\n  let txt1 = txt;\n  let x = txt1.split(IntCR);\n  txt1 = x.join(CR);\n  x = txt1.split(IntLF);\n  txt1 = x.join(LF);\n  x = txt1.split(IntSP);\n  txt1 = x.join(SP);\n  return txt1;\n}"],"sourceRoot":""}